import { CreateUpdateList, CreateUpdateMailListMembers, DeletedMember, DestroyedList, MailListMember, MailListMembersQuery, MailListMembersResult, MailgunClientOptions, MailgunMessageData, MailingList, MultipleMembersData, NewMultipleMembersResponse } from 'mailgun.js';
export type EmailOptions = MailgunMessageData;
export declare class MailgunService {
    private readonly configuration;
    private readonly mailgun;
    constructor(configuration: MailgunClientOptions);
    createEmail: (domain: string, data: EmailOptions) => Promise<any>;
    validateEmail: (email: string) => Promise<{
        address: string;
        is_disposable_address: boolean;
        is_role_address: boolean;
        reason: string[];
        result: string;
        risk: string;
    }>;
    createList: (data: CreateUpdateList) => Promise<MailingList>;
    destroyList: (mailListAddress: string) => Promise<DestroyedList>;
    getList: (mailListAddress: string) => Promise<MailingList>;
    updateList: (mailListAddress: string, data: CreateUpdateList) => Promise<MailingList>;
    listAddMember: (mailListAddress: string, data: CreateUpdateMailListMembers) => Promise<MailListMember>;
    listGetMembers: (mailListAddress: string, query?: MailListMembersQuery) => Promise<MailListMembersResult>;
    listCreateMembers: (mailListAddress: string, data: MultipleMembersData) => Promise<NewMultipleMembersResponse>;
    listupdateMember: (address: string, memberAddress: string, data: CreateUpdateMailListMembers) => Promise<MailListMember>;
    listDestroyMember: (address: string, memberAddress: string) => Promise<DeletedMember>;
}
